xdm-content   848714  2 689 538 727
xdm-document  848714    225 640 949
xdm-element 57482391 13 641 811 383

queries:

for $x in distinct-values(collection()/map/currencycode)
return $x


for $map in collection()
let $ccy := $map/map/currencycode
group by $ccy
return <group ccy="{$ccy}" count="{count($map)}"/>

distrubuted testing: docker! blockade, jepsen

>> load C:\\Work\\Bagri\\booking 100

> query result:

<group ccy="FJD" count="166"/>
<group ccy="CHF" count="8779"/>
<group ccy="MXN" count="2594"/>
<group ccy="GTQ" count="496"/>
<group ccy="ZAR" count="6822"/>
<group ccy="AUD" count="12739"/>
<group ccy="MDL" count="252"/>
<group ccy="IDR" count="8941"/>
<group ccy="AMD" count="759"/>
<group ccy="BWP" count="66"/>
<group ccy="JOD" count="331"/>
<group ccy="AED" count="1111"/>
<group ccy="TWD" count="3461"/>
<group ccy="HKD" count="625"/>
<group ccy="EUR" count="439648"/>
<group ccy="DKK" count="20546"/>
<group ccy="LSL" count="21"/>
<group ccy="CAD" count="9018"/>
<group ccy="MYR" count="3861"/>
<group ccy="NOK" count="3536"/>
<group ccy="GEL" count="3176"/>
<group ccy="XOF" count="406"/>
<group ccy="CVE" count="286"/>
<group ccy="AZN" count="298"/>
<group ccy="OMR" count="219"/>
<group ccy="PGK" count="40"/>
<group ccy="NGN" count="309"/>
<group ccy="SEK" count="5889"/>
<group ccy="UAH" count="3672"/>
<group ccy="BHD" count="132"/>
<group ccy="MZN" count="108"/>
<group ccy="QAR" count="107"/>
<group ccy="SAR" count="1299"/>
<group ccy="KZT" count="858"/>
<group ccy="SZL" count="22"/>
<group ccy="AFN" count="1"/>
<group ccy="IRR" count="4"/>
<group ccy="INR" count="14910"/>
<group ccy="CNY" count="35138"/>
<group ccy="THB" count="12999"/>
<group ccy="XPF" count="186"/>
<group ccy="KRW" count="3130"/>
<group ccy="PLN" count="15890"/>
<group ccy="JPY" count="8297"/>
<group ccy="GBP" count="33448"/>
<group ccy="PHP" count="2294"/>
<group ccy="KWD" count="112"/>
<group ccy="RUB" count="24137"/>
<group ccy="COP" count="4509"/>
<group ccy="USD" count="126742"/>
<group ccy="MGA" count="185"/>
<group ccy="DZD" count="16"/>
<group ccy="SGD" count="447"/>
<group ccy="NAD" count="271"/>
<group ccy="NZD" count="3831"/>
<group ccy="BRL" count="21462"/>
<group ccy="XAF" count="112"/>
> got 57 results; time taken: 195926 ms

> query result:

<group ccy="FJD" count="166"/>
<group ccy="CHF" count="8779"/>
<group ccy="MXN" count="2594"/>
<group ccy="GTQ" count="496"/>
<group ccy="ZAR" count="6822"/>
<group ccy="AUD" count="12739"/>
<group ccy="MDL" count="252"/>
<group ccy="IDR" count="8941"/>
<group ccy="AMD" count="759"/>
<group ccy="BWP" count="66"/>
<group ccy="JOD" count="331"/>
<group ccy="AED" count="1111"/>
<group ccy="TWD" count="3461"/>
<group ccy="HKD" count="625"/>
<group ccy="EUR" count="439648"/>
<group ccy="DKK" count="20546"/>
<group ccy="LSL" count="21"/>
<group ccy="CAD" count="9018"/>
<group ccy="MYR" count="3861"/>
<group ccy="NOK" count="3536"/>
<group ccy="GEL" count="3176"/>
<group ccy="XOF" count="406"/>
<group ccy="CVE" count="286"/>
<group ccy="AZN" count="298"/>
<group ccy="OMR" count="219"/>
<group ccy="PGK" count="40"/>
<group ccy="NGN" count="309"/>
<group ccy="SEK" count="5889"/>
<group ccy="UAH" count="3672"/>
<group ccy="BHD" count="132"/>
<group ccy="MZN" count="108"/>
<group ccy="QAR" count="107"/>
<group ccy="SAR" count="1299"/>
<group ccy="KZT" count="858"/>
<group ccy="SZL" count="22"/>
<group ccy="AFN" count="1"/>
<group ccy="IRR" count="4"/>
<group ccy="INR" count="14910"/>
<group ccy="CNY" count="35138"/>
<group ccy="THB" count="12999"/>
<group ccy="XPF" count="186"/>
<group ccy="KRW" count="3130"/>
<group ccy="PLN" count="15890"/>
<group ccy="JPY" count="8297"/>
<group ccy="GBP" count="33448"/>
<group ccy="PHP" count="2294"/>
<group ccy="KWD" count="112"/>
<group ccy="RUB" count="24137"/>
<group ccy="COP" count="4509"/>
<group ccy="USD" count="126742"/>
<group ccy="MGA" count="185"/>
<group ccy="DZD" count="16"/>
<group ccy="SGD" count="447"/>
<group ccy="NAD" count="271"/>
<group ccy="NZD" count="3831"/>
<group ccy="BRL" count="21462"/>
<group ccy="XAF" count="112"/>
> got 57 results; time taken: 220389 ms

heapdump-1466631509821  //elements cache in BINARY format; cache-values=INDEX-ONLY; 
heapdump-1467782700244  //elements cache in BINARY format; cache-values=NEVER; before query
heapdump-1467784520658  //elements cache in BINARY format; cache-values=NEVER; before query (after ?)
heapdump-1467962870679  //elements cache in OBJECT format; cache-values=NEVER; before query
heapdump-1467964470440  //elements cache in OBJECT format; cache-values=NEVER; after query
heapdump-1468160973448  //elements cache in OBJECT format; cache-values=INDEX-ONLY; before query
heapdump-1468162830109  //elements cache in OBJECT format; cache-values=INDEX-ONLY; after query

<FLWOR vn="31"
       baseUri="file:/C:/Work/Bagri/git/bagri/etc/samples/default/"
       ns="fn=http://www.w3.org/2005/xpath-functions xs=http://www.w3.org/2001/XMLSchema saxon=http://saxon.sf.net/ err=http://www.w3.org/2005/xqt-errors local=http://www.w3.org/2005/xquery-local-functions xsi=http://www.w3.org/2001/XMLSchema-instance"
       line="2">
   <for var="map" slot="0">
      <fn name="collection"/>
   </for>
   <let var="ccy" slot="1">
      <slash line="3">
         <slash simple="1">
            <treat as="node()" diag="1|0|XPTY0019|/">
               <varRef name="map" slot="0"/>
            </treat>
            <axis name="child" nodeTest="element(Q{}map)"/>
         </slash>
         <axis line="4" name="child" nodeTest="element(Q{}currencycode)"/>
      </slash>
   </let>
   <group-by>
      <by var="map" slot="0"/>
   </group-by>
   <return>
      <elem line="5" name="group">
         <sequence>
            <att name="ccy">
               <fn line="1" name="string-join">
                  <convert from="xs:anyAtomicType" to="xs:string">
                     <data>
                        <varRef name="ccy" slot="2"/>
                     </data>
                  </convert>
                  <str val=" "/>
               </fn>
            </att>
            <att name="count">
               <convert line="1" from="xs:integer" to="xs:string">
                  <fn name="count">
                     <varRef name="map" slot="3"/>
                  </fn>
               </convert>
            </att>
         </sequence>
      </elem>
   </return>
</FLWOR>

start: net.sf.saxon.expr.flwor.FLWORExpression; path: for $map in collection() let $ccy := ((($map) treat as node())/child::element(Q{}map))/child::element(Q{}currencycode) group by ...   return <group {Block(FixedAttribute(string-join(convert(data($ccy)), " ")), FixedAttribute(convert(count($map))))}/>
start: net.sf.saxon.expr.SystemFunctionCall; path: collection()
iterate; set collectionId: -1 for uri: 
end: net.sf.saxon.expr.SystemFunctionCall; path: 
start: net.sf.saxon.expr.SlashExpression; path: ((($map) treat as node())/child::element(Q{}map))/child::element(Q{}currencycode)
start: net.sf.saxon.expr.SimpleStepExpression; path: (($map) treat as node())/child::element(Q{}map)
start: net.sf.saxon.expr.ItemChecker; path: ($map) treat as node()
start: net.sf.saxon.expr.LocalVariableReference; path: $map
end: net.sf.saxon.expr.LocalVariableReference; path: 
end: net.sf.saxon.expr.ItemChecker; path: 
start: net.sf.saxon.expr.AxisExpression; path: child::element(Q{}map)
iterate: axis: child
end: net.sf.saxon.expr.AxisExpression; path: /map
end: net.sf.saxon.expr.SimpleStepExpression; path: /map
start: net.sf.saxon.expr.AxisExpression; path: child::element(Q{}currencycode)
iterate: axis: child
end: net.sf.saxon.expr.AxisExpression; path: /map/currencycode
end: net.sf.saxon.expr.SlashExpression; path: /map/currencycode
start: net.sf.saxon.expr.flwor.TupleExpression; path: TupleExpression($ccy)
start: net.sf.saxon.expr.LocalVariableReference; path: $ccy
end: net.sf.saxon.expr.LocalVariableReference; path: /map/currencycode
end: net.sf.saxon.expr.flwor.TupleExpression; path: /map/currencycode
start: net.sf.saxon.expr.flwor.TupleExpression; path: TupleExpression($map)
start: net.sf.saxon.expr.LocalVariableReference; path: $map
end: net.sf.saxon.expr.LocalVariableReference; path: /map/currencycode
end: net.sf.saxon.expr.flwor.TupleExpression; path: /map/currencycode
start: net.sf.saxon.expr.instruct.FixedElement; path: <group {Block(FixedAttribute(string-join(convert(data($ccy)), " ")), FixedAttribute(convert(count($map))))}/>
start: net.sf.saxon.expr.instruct.Block; path: Block(FixedAttribute(string-join(convert(data($ccy)), " ")), FixedAttribute(convert(count($map))))
end: net.sf.saxon.expr.instruct.Block; path: /map/currencycode
end: net.sf.saxon.expr.instruct.FixedElement; path: /map/currencycode
end: net.sf.saxon.expr.flwor.FLWORExpression; path: 
